---
messageEnv: 'admin'

orawls::weblogic::log_output:   true


logoutput:                     &logoutput                     true

# when you have just one domain on a server
domain_name:                "soa_basedomain"
domain_adminserver:         "AdminServer"
domain_adminserver_address: "192.168.50.20"
domain_adminserver_port:    7001
domain_nodemanager_port:    5556
domain_wls_password:        "welcome1"
domain_user_config_file:    "/home/oracle/oracle-Wls1036-WebLogicConfig.properties"
domain_user_key_file:       "/home/oracle/oracle-Wls1036-WebLogicKey.properties"


# create a standard domain
domain_instances:
  'wlsDomain':
     domain_template:          "soa_bpm"
     development_mode:         true
     log_output:               *logoutput
     repository_database_url:  "jdbc:oracle:thin:@192.168.50.5:1521:XE"
     repository_prefix:        "DEV"
     repository_password:      "oracle"



# create and startup the nodemanager
nodemanager_instances:
  'nodemanager':
     log_output:           *logoutput

# startup adminserver for extra configuration
control_instances:
  'startWLSAdminServer':
     domain_dir:           "/opt/oracle/middleware11g/user_projects/domains/soa_basedomain"
     server_type:          'admin'
     target:               'Server'
     server:               'AdminServer'
     action:               'start'
     log_output:           *logoutput

# create password file for WLST utility
userconfig_instances:
  'Wls12c':
     log_output:           *logoutput
     user_config_dir:      '/home/oracle'

# create 2 machines
machines_instances:
  'createMachine_node1':
     log_output:           *logoutput
     weblogic_type:        "machine"
     weblogic_object_name: "Node1"
     script:               'createMachine.py'
     params:
        - "machineName      = 'Node1'"
        - "machineDnsName   = '192.168.50.100'"
  'createMachine_node2':
     log_output:           *logoutput
     weblogic_type:        "machine"
     weblogic_object_name: "Node2"
     script:               'createMachine.py'
     params:
        - "machineName      = 'Node2'"
        - "machineDnsName   = '192.168.50.200'"

# create 2 managed servers and assign them to the machines
managed_servers_instances:
  'wlsServer1_node1':
     log_output:           *logoutput
     weblogic_type:        "server"
     weblogic_object_name: "wlsServer1"
     script:               'createServer.py'
     params:
        - "javaArguments    = '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer1.out -Dweblogic.Stderr=/data/logs/wlsServer1_err.out'"
        - "wlsServerName    = 'wlsServer1'"
        - "machineName      = 'Node1'"
        - "listenAddress    = 8001"
        - "nodeMgrLogDir    = '/data/logs'"
  'wlsServer2_node2':
     log_output:           *logoutput
     weblogic_type:        "server"
     weblogic_object_name: "wlsServer2"
     script:               'createServer.py'
     params:
        - "javaArguments    = '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer2.out -Dweblogic.Stderr=/data/logs/wlsServer2_err.out'"
        - "wlsServerName    = 'wlsServer2'"
        - "machineName      = 'Node2'"
        - "listenAddress    = 8001"
        - "nodeMgrLogDir    = '/data/logs'"

# create cluster and assign the managed servers
cluster_instances:
  'cluster_web':
     log_output:           *logoutput
     weblogic_type:        "cluster"
     weblogic_object_name: "WebCluster"
     script:               'createCluster.py'
     params:
        - "clusterName      = 'WebCluster'"
        - "clusterNodes     = 'wlsServer1,wlsServer2'"

# create filepersistence location for the jms servers
file_persistence_instances:
#  'filePersistenceNode1':
#     log_output:           *logoutput
#     weblogic_type:        "filestore"
#     weblogic_object_name: "jmsFilePersistenceNode1"
#     script:               'createFilePersistenceStore.py'
#     params:
#        - "fileStoreName    = 'jmsFilePersistenceNode1'"
#        - "target           = 'wlsServer1'"
#        - "targetType       = 'Server'"
#  'filePersistenceNode2':
#     log_output:           *logoutput
#     weblogic_type:        "filestore"
#     weblogic_object_name: "jmsFilePersistenceNode2"
#     script:               'createFilePersistenceStore.py'
#     params:
#        - "fileStoreName    = 'jmsFilePersistenceNode2'"
#        - "target           = 'wlsServer2'"
#        - "targetType       = 'Server'"
#


# create jms servers with a server,file persistence target
jms_servers_instances:
#   'jmsServerNode1':
#      log_output:           *logoutput
#      weblogic_type:        "jmsserver"
#      weblogic_object_name: "jmsServer1"
#      script:               'createJmsServer.py'
#      params:
# #        - "storeName        = 'jmsFilePersistenceNode1'"
#         - "target           = 'wlsServer1'"
#         - "targetType       = 'Server'"
# #        - "storeType        = 'file'"
#         - "jmsServerName    = 'jmsServer1'"
#   'jmsServerNode2':
#      log_output:           *logoutput
#      weblogic_type:        "jmsserver"
#      weblogic_object_name: "jmsServer2"
#      script:               'createJmsServer.py'
#      params:
# #        - "storeName        = 'jmsFilePersistenceNode2'"
#         - "target           = 'wlsServer2'"
#         - "targetType       = 'Server'"
# #        - "storeType        = 'file'"
#         - "jmsServerName    = 'jmsServer2'"

# #
# # create jms module for cluster 
jms_module_instances:
#   'jmsClusterModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsmodule"
#      weblogic_object_name: "jmsClusterModule"
#      script:               'createJmsModule.py'
#      params:
#         - "target           = 'WebCluster'"
#         - "targetType       = 'Cluster'"
#         - "jmsModuleName    = 'jmsClusterModule'"

# # create jms subdeployment for the jms module 
jms_module_subdeployments_instances:
#   'SubDeploymentWLSforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmssubdeployment"
#      weblogic_object_name: "jmsClusterModule/wlsServers"
#      script:               'createJmsSubDeployment.py'
#      params:
#         - "target           = 'WebCluster'"
#         - "targetType       = 'Cluster'"
#         - "subName          = 'wlsServers'"
#         - "jmsModuleName    = 'jmsClusterModule'"
#   'SubDeploymentJMSforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmssubdeployment"
#      weblogic_object_name: "jmsClusterModule/jmsServers"
#      script:               'createJmsSubDeployment.py'
#      params:
#         - "target           = 'jmsServer1,jmsServer2'"
#         - "targetType       = 'JMSServer'"
#         - "subName          = 'jmsServers'"
#         - "jmsModuleName    = 'jmsClusterModule'"

# # create jms quotas for the jms module 
jms_module_quotas_instances:
#   'QuotaBigforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsquota"
#      weblogic_object_name: "jmsClusterModule/QuotaBig"
#      script:               'createJmsQuota.py'
#      params:
#         - "jmsQuotaName     = 'QuotaBig'"
#         - "bytesMaximum     = 9223372036854775807"
#         - "messagesMaximum  = 9223372036854775807"
#         - "jmsModuleName    = 'jmsClusterModule'"
#         - "shared           = false"
#         - "policy           = 'FIFO'"
#   'QuotaLowforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsquota"
#      weblogic_object_name: "jmsClusterModule/QuotaLow"
#      script:               'createJmsQuota.py'
#      params:
#         - "jmsQuotaName     = 'QuotaLow'"
#         - "bytesMaximum     = 10000000000"
#         - "messagesMaximum  = 10000"
#         - "jmsModuleName    = 'jmsClusterModule'"
#         - "shared           = false"
#         - "policy           = 'FIFO'"

# # create jms connection factory for jms module  
jms_module_cf_instances:
#   'createJmsConnectionFactoryforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsobject"
#      weblogic_object_name: "cf"
#      script:               'createJmsConnectionFactory.py'
#      params:
#         - "subDeploymentName = 'wlsServers'"
#         - "jmsModuleName     = 'jmsClusterModule'"
#         - "cfName            = 'cf'"
#         - "cfJNDIName        = 'jms/cf'"
#         - "transacted        = 'false'"
#         - "timeout           = 'xxxx'"

jms_module_jms_errors_instances:
#   'createJmsErrorQueueforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsobject"
#      weblogic_object_name: "ErrorQueue"
#      script:               'createJmsQueueOrTopic.py'
#      params:
#         - "subDeploymentName = 'jmsServers'"
#         - "jmsModuleName     = 'jmsClusterModule'"
#         - "jmsName           = 'ErrorQueue'"
#         - "jmsJNDIName       = 'jms/ErrorQueue'"
#         - "jmsType           = 'queue'"
#         - "distributed       = 'true'"
#         - "balancingPolicy   = 'Round-Robin'"
#         - "useRedirect       = 'false'"
#         - "limit             = 'xxxxx'"
#         - "policy            = 'xxxxx'"
#         - "errorObject       = 'xxxxx'"

# # create jms objects for jms module  
jms_module_jms_instances:
#   'createJmsQueueforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsobject"
#      weblogic_object_name: "Queue1"
#      script:               'createJmsQueueOrTopic.py'
#      params:
#         - "subDeploymentName = 'jmsServers'"
#         - "jmsModuleName     = 'jmsClusterModule'"
#         - "jmsName           = 'Queue1'"
#         - "jmsJNDIName       = 'jms/Queue1'"
#         - "jmsType           = 'queue'"
#         - "distributed       = 'true'"
#         - "balancingPolicy   = 'Round-Robin'"
#         - "useRedirect       = 'true'"
#         - "limit             = '3'"
#         - "policy            = 'Redirect'"
#         - "errorObject       = 'ErrorQueue'"
#   'createJmsTopicforJmsModule':
#      log_output:           *logoutput
#      weblogic_type:        "jmsobject"
#      weblogic_object_name: "Topic1"
#      script:               'createJmsQueueOrTopic.py'
#      params:
#         - "subDeploymentName = 'jmsServers'"
#         - "jmsModuleName     = 'jmsClusterModule'"
#         - "jmsName           = 'Topic1'"
#         - "jmsJNDIName       = 'jms/Topic1'"
#         - "jmsType           = 'topic'"
#         - "distributed       = 'true'"
#         - "balancingPolicy   = 'Round-Robin'"
#         - "useRedirect       = 'true'"
#         - "limit             = '3'"
#         - "policy            = 'Redirect'"
#         - "errorObject       = 'ErrorQueue'"



# pack domains
pack_domain_instances:
  'wlsDomain':
     log_output:               *logoutput
